import { createSlice } from '@reduxjs/toolkit'
import type { PayloadAction } from '@reduxjs/toolkit'
import { v4 as uuidv4 } from 'uuid';






// Generated by https://quicktype.io

export interface QuestionData {
  id: string;
  question: string;
  response: string;
}

export interface QuetionArr {
  questions: QuestionData[]
}


const initialState: QuetionArr = {
questions: [ 

  {
    id: "1",
    question: "Hola",
    response: "Holis aqui te explico quÃ© onda"
  }

]

}

export const questionsSlice = createSlice({
  name: 'questions',
  initialState,
  reducers: {
   
    setQuestions: (state, action) => {
      state.questions = [...action.payload]
    },
    addQuestion: (state, action) => {


      console.log(" dhaskldhaskdjhasdkahdkahs hsakshdkHASKJDHKHKHFKJDH")


      state.questions = [...state.questions, ...action.payload]

    },
    removeQuestion: (state, action) => {
      state.questions = [...state.questions.filter((question) => question.id !== action.payload)]
    },
  },
})

// Action creators are generated for each case reducer function
export const {
  setQuestions,
  addQuestion,
  removeQuestion,

} = questionsSlice.actions

export default questionsSlice.reducer